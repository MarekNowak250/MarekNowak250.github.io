{"title":"Czym r\u00F3\u017Cni si\u0119 First(OrDefault) od Single(OrDefault)?","date":"28/10/2022 06:17","lastEditDate":"28/10/2022 06:17","content":[{"props":[],"content":"First vs Single","name":"header"},{"props":[],"content":"Zar\u00F3wno operator LINQ Single jak i operator LINQ First zwracaj\u0105 pojedynczy element. Oba te operatory zg\u0142osz\u0105 wyj\u0105tek InvalidOperationException, w przypadku gdyby nie uda\u0142o si\u0119 znale\u017A\u0107 \u017Cadnego elementu do zwr\u00F3cenia.","name":"paragraph"},{"props":[{"name":"lang","content":"csharp"}],"content":"   var collection = new List\u003Cint\u003E() { 1, 2, 3, 4 };\r\n\r\n   collection.Where(item =\u003E item == 1).First();\r\n   collection.Where(item =\u003E item == 1).Single();","name":"code"},{"props":[],"content":"R\u00F3\u017Cnica uwidacznia si\u0119 w przypadku, gdy podany warunek spe\u0142nia wi\u0119cej ni\u017C jeden element. Operator Single zg\u0142osi wtedy taki sam wyj\u0105tek, jak gdyby nie znalaz\u0142 \u017Cadnego pasuj\u0105cego obiektu/warto\u015Bci, natomiast operator First \u0022wybierze\u0022 i zwr\u00F3ci pierwszy element z kolekcji wynikowej.","name":"paragraph"},{"props":[{"name":"alt","content":"Kod, okno z b\u0142\u0119dem, gdy kolekcja wynikowa ma wi\u0119cej ni\u017C jeden wynik dla operatora Single"}],"content":"second.png","name":"img"},{"props":[],"content":"Co daje wersja z OrDefault?","name":"header"},{"props":[],"content":"Wy\u017Cej opisane operatory w wersji z dopiskiem OrDefault zmieniaj\u0105 swoje zachowanie w sytuacji, gdy nie zosta\u0142 znaleziony \u017Caden pasuj\u0105cy wynik. Zamiast zg\u0142asza\u0107 b\u0142\u0105d zwracaj\u0105 one domy\u015Bln\u0105 warto\u015B\u0107, np. dla warto\u015Bci int b\u0119dzie to 0, a dla obiekt\u00F3w NULL.\r\n","name":"paragraph"},{"props":[],"content":"Kiedy u\u017Cywa\u0107 Single, a kiedy First?","name":"header"},{"props":[],"content":"Operatora Single powinni\u015Bmy u\u017Cy\u0107, gdy podany warunek powinien spe\u0142nia\u0107 wy\u0142\u0105cznie jeden element, np. gdy szukamy obiektu o podanym Id. W takim przypadku nie oczekiwaliby\u015Bmy dw\u00F3ch obiekt\u00F3w o takim samym identyfikatorze, a gdyby okaza\u0142o si\u0119, \u017Ce jednak integralno\u015B\u0107 systemu zosta\u0142a naruszona/gdzie\u015B w naszym programie istnieje b\u0142\u0105d powinni\u015Bmy si\u0119 o tym dowiedzie\u0107 (poprzez wyj\u0105tek). ","name":"paragraph"},{"props":[],"content":"W tym przypadku First wynik zosta\u0142by prawid\u0142owo zwr\u00F3cony, co moig\u0142oby doprowadzi\u0107 do dalszych b\u0142\u0119d\u00F3w w programie.","name":"paragraph"},{"props":[],"content":"Natomiast operator First doskonale sprawdzi si\u0119, gdy b\u0119dziemy chcieli pobra\u0107 pierwszy element z kolekcji wynikowej wiedz\u0105c, \u017Ce obiekt\u00F3w spe\u0142niaj\u0105cych warunek b\u0119dzie wi\u0119cej, np. gdyby\u015Bmy chcieli pobra\u0107 najstarszy obiekt z listy (filtruj\u0105c wcze\u015Bniej po polu z dat\u0105 stworzenia).","name":"paragraph"}]}